{"version":3,"sources":["webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/image.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["SEO","_ref","description","lang","meta","keywords","title","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired","images","url","bg","imgTmp","Math","floor","random","Header","siteTitle","staticTheme","glitched","react_default","className","gatsby_browser_entry","to","components_image","filename","data-text","activeClassName","Footer","Layout","props","query","render","Fragment","showHeader","components_header","glitchedHeader","showFooter","children","components_footer","_755544856","node","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","func","Image","react__WEBPACK_IMPORTED_MODULE_4___default","gatsby__WEBPACK_IMPORTED_MODULE_5__","image","edges","find","relativePath","includes","imageSizes","childImageSharp","sizes","gatsby_image__WEBPACK_IMPORTED_MODULE_6___default","alt","_public_static_d_1345654842_json__WEBPACK_IMPORTED_MODULE_3__","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"2-648b03207117617df082.js","sourcesContent":["/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:image`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ]\r\n        .concat(\r\n          keywords.length > 0\r\n            ? {\r\n                name: `keywords`,\r\n                content: keywords.join(`, `),\r\n              }\r\n            : []\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport Image from \"../components/image\"\r\nimport \"../css/components/header.scss\"\r\n\r\nlet images = [\r\n  {\r\n    url: \"logos/vitamin_games_color_logo.png\",\r\n    bg: false\r\n  },\r\n  {\r\n    url: \"logos/vitamin_games_gb_logo.png\",\r\n    bg: true\r\n  },\r\n  {\r\n    url: \"logos/vitamin_games_bw_logo.png\",\r\n    bg: true\r\n  }\r\n]\r\n\r\nlet imgTmp = images[Math.floor(Math.random() * images.length)];\r\n\r\nconst Header = ({ siteTitle, staticTheme, glitched }) => (\r\n  <header className={\"page \" + ((((staticTheme != null) ? images[staticTheme].bg : imgTmp.bg)) ? \"bg \" : \"\") + (glitched ? \"glitch\" : \"\")}>\r\n    <div className=\"wrapper\">\r\n      <div className=\"left\">\r\n        <Link to=\"/\">\r\n          <Image filename={(staticTheme != null) ? images[staticTheme].url : imgTmp.url}/>\r\n          <p data-text=\"Vitamin Games\">Vitamin Games</p>\r\n        </Link>\r\n      </div>\r\n      <div className=\"right\">\r\n        <ul>\r\n          <li><Link activeClassName={\"active\"} to=\"/\">Home</Link></li>\r\n          <li><Link activeClassName={\"active\"} to=\"/games\">Games</Link></li>\r\n          <li><Link activeClassName={\"active\"} to=\"/press\">Press</Link></li>\r\n          <li><Link activeClassName={\"active\"} to=\"/contact\">Contact</Link></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n  staticTheme: null\r\n}\r\n\r\nexport default Header\r\n","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport Image from \"../components/image\"\r\nimport \"../css/components/footer.scss\"\r\n\r\nlet images = [\r\n  {\r\n    url: \"logos/vitamin_games_color_logo.png\",\r\n    bg: false\r\n  },\r\n  {\r\n    url: \"logos/vitamin_games_gb_logo.png\",\r\n    bg: true\r\n  },\r\n  {\r\n    url: \"logos/vitamin_games_bw_logo.png\",\r\n    bg: true\r\n  }\r\n]\r\n\r\nlet imgTmp = images[Math.floor(Math.random() * images.length)];\r\n\r\nconst Footer = ({ siteTitle, staticTheme }) => (\r\n  <footer className={\"page \" + ((((staticTheme != null) ? images[staticTheme].bg : imgTmp.bg)) ? \"bg\" : \"\")}>\r\n    <div className=\"wrapper\">\r\n      <div className=\"left\">\r\n        <Link to=\"/\">\r\n          <Image filename={(staticTheme != null) ? images[staticTheme].url : imgTmp.url}/>\r\n        </Link>\r\n      </div>\r\n      <div className=\"right\">\r\n        <p>Healthy Fun <span>(◕‿◕✿)</span></p>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n)\r\n\r\nFooter.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nFooter.defaultProps = {\r\n  siteTitle: ``,\r\n  staticTheme: null\r\n}\r\n\r\nexport default Footer\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport Footer from \"./footer\"\r\nimport \"../css/main.scss\"\r\n\r\nconst Layout = (props) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        {(props.showHeader) ?\r\n          <Header staticTheme={props.staticTheme} glitched={props.glitchedHeader} siteTitle={data.site.siteMetadata.title} />\r\n        :null}\r\n        <main className={((props.showFooter) ? \"\" : \"no-footer \") + ((props.showHeader) ? \"\" : \"no-header \")}>{props.children}</main>\r\n        {(props.showFooter) ?\r\n          <Footer staticTheme={props.staticTheme} glitched={props.glitchedHeader} />\r\n        :null}\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\n\r\nLayout.defaultProps = {\r\n  showHeader: true,\r\n  showFooter: true,\r\n  staticTheme: null,\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\nconst Image = (props) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        images: allFile {\r\n          edges {\r\n            node {\r\n              relativePath\r\n              name\r\n              childImageSharp {\r\n                sizes(maxWidth: 600) {\r\n                  ...GatsbyImageSharpSizes\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n\r\n    render={(data) => {\r\n      const image = data.images.edges.find(n => {\r\n        return n.node.relativePath.includes(props.filename);\r\n      });\r\n      if (!image) { return null; }\r\n      \r\n      const imageSizes = image.node.childImageSharp.sizes;\r\n      return (\r\n        <Img\r\n          className={props.className}\r\n          alt={props.alt}\r\n          sizes={imageSizes}\r\n        />\r\n      );\r\n    }}\r\n  />\r\n)\r\nexport default Image\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}